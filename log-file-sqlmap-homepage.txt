[11:08:25] [INFO] testing connection to the target URL
[11:08:25] [INFO] testing if the target URL content is stable
[11:08:25] [INFO] target URL content is stable
[11:08:25] [INFO] testing if POST parameter 'nim' is dynamic
[11:08:25] [WARNING] POST parameter 'nim' does not appear to be dynamic
[11:08:25] [WARNING] heuristic (basic) test shows that POST parameter 'nim' might not be injectable
[11:08:25] [INFO] testing for SQL injection on POST parameter 'nim'
[11:08:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:08:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:08:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:08:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:08:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:08:26] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:08:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:08:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:08:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:08:26] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:08:27] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:08:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:08:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:08:27] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:08:27] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:08:27] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:08:27] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:08:27] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:08:27] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:08:27] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:08:27] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:08:27] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:08:27] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:08:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:08:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:08:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:08:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:08:27] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:08:27] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:08:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:08:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:08:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:08:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:08:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:08:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:08:27] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:08:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:08:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:08:27] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:08:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:08:28] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:08:28] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:08:28] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:08:28] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:08:28] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:08:28] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:08:28] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:08:28] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:08:29] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:08:29] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:08:29] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:08:29] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:08:29] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:08:29] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:08:30] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:08:30] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:08:30] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:08:30] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:08:30] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:08:30] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:08:31] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:08:31] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:08:31] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:08:31] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:08:31] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:08:31] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:08:31] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:08:31] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:08:31] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:08:31] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:08:31] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:08:31] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:08:31] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:08:31] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:08:31] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:08:31] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:08:31] [INFO] testing 'Oracle error-based - Parameter replace'
[11:08:31] [INFO] testing 'Firebird error-based - Parameter replace'
[11:08:31] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:08:31] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:08:31] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:08:31] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:08:31] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:08:31] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:08:31] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:08:31] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:08:31] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:08:31] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:08:31] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:08:31] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:08:31] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:08:31] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:08:31] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:08:31] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:08:31] [INFO] testing 'Generic inline queries'
[11:08:31] [INFO] testing 'MySQL inline queries'
[11:08:31] [INFO] testing 'PostgreSQL inline queries'
[11:08:31] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:08:31] [INFO] testing 'Oracle inline queries'
[11:08:31] [INFO] testing 'SQLite inline queries'
[11:08:31] [INFO] testing 'Firebird inline queries'
[11:08:31] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:08:31] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:08:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:08:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:08:32] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:08:32] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:08:32] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:08:32] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:08:32] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:08:32] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:08:32] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:08:32] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:08:32] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:08:33] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:08:33] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:08:33] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:08:33] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:08:33] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:08:33] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:08:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:08:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:08:34] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:08:34] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:08:34] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:08:34] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:08:34] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:08:34] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:08:35] [INFO] testing 'Oracle AND time-based blind'
[11:08:35] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:08:35] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:08:35] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:08:35] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:08:35] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:08:35] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:08:35] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:08:35] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:08:35] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:08:35] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:08:35] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:08:35] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:08:35] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[11:08:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:08:42] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:08:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:08:43] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                                                                           
[11:08:43] [WARNING] POST parameter 'nim' does not seem to be injectable
[11:08:43] [INFO] testing if POST parameter 'search' is dynamic
[11:08:43] [WARNING] POST parameter 'search' does not appear to be dynamic
[11:08:43] [WARNING] heuristic (basic) test shows that POST parameter 'search' might not be injectable
[11:08:43] [INFO] testing for SQL injection on POST parameter 'search'
[11:08:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:08:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:08:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:08:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:08:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:08:44] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:08:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:08:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:08:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:08:44] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:08:45] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:08:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:08:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:08:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:08:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:08:45] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:08:45] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:08:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:08:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:08:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:08:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:08:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:08:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:08:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:08:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:08:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:08:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:08:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:08:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:08:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:08:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:08:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:08:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:08:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:08:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:08:45] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:08:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:08:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:08:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:08:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:08:46] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:08:46] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:08:46] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:08:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:08:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:08:46] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:08:46] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:08:47] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:08:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:08:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:08:47] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:08:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:08:47] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:08:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:08:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:08:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:08:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:08:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:08:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:08:49] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:08:49] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:08:49] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:08:49] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:08:49] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:08:49] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:08:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:08:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:08:49] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:08:49] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:08:49] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:08:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:08:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:08:49] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:08:49] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:08:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:08:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:08:49] [INFO] testing 'Oracle error-based - Parameter replace'
[11:08:49] [INFO] testing 'Firebird error-based - Parameter replace'
[11:08:49] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:08:49] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:08:49] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:08:49] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:08:49] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:08:49] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:08:49] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:08:49] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:08:49] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:08:49] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:08:49] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:08:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:08:49] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:08:49] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:08:49] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:08:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:08:49] [INFO] testing 'Generic inline queries'
[11:08:49] [INFO] testing 'MySQL inline queries'
[11:08:49] [INFO] testing 'PostgreSQL inline queries'
[11:08:49] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:08:49] [INFO] testing 'Oracle inline queries'
[11:08:49] [INFO] testing 'SQLite inline queries'
[11:08:49] [INFO] testing 'Firebird inline queries'
[11:08:49] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:08:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:08:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:08:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:08:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:08:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:08:50] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:08:50] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:08:50] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:08:50] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:08:50] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:08:50] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:08:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:08:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:08:51] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:08:51] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:08:51] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:08:51] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:08:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:08:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:08:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:08:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:08:51] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:08:52] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:08:52] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:08:52] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:08:52] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:08:52] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:08:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:08:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:08:52] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:08:53] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:08:53] [INFO] testing 'Oracle AND time-based blind'
[11:08:53] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:08:53] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:08:53] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:08:53] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:08:53] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:08:53] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:08:53] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:08:53] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:08:53] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:08:53] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:08:53] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:08:53] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:08:53] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
[11:08:53] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:08:53] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:08:53] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:08:54] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                                                                           
[11:08:54] [WARNING] POST parameter 'search' does not seem to be injectable
[11:08:54] [INFO] testing if Cookie parameter 'PHPSESSID' is dynamic
do you want to URL encode cookie values (implementation specific)? [Y/n] y
got a 302 redirect to 'http://127.0.0.1:80/nim-finder-main/login.php'. Do you want to follow? [Y/n] y
redirect is a result of a POST request. Do you want to resend original POST data to a new location? [y/N] y
[11:09:07] [INFO] Cookie parameter 'PHPSESSID' appears to be dynamic
[11:09:07] [WARNING] heuristic (basic) test shows that Cookie parameter 'PHPSESSID' might not be injectable                                               
[11:09:07] [INFO] testing for SQL injection on Cookie parameter 'PHPSESSID'
[11:09:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:09:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:09:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:09:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:09:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:09:09] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:09:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:09:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:09:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:09:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:09:12] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:09:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:09:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:09:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:09:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:09:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:09:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:09:12] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:09:12] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:09:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:09:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:09:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:09:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:09:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:09:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:09:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:09:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:09:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:09:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:09:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:09:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:09:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:09:13] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:09:13] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:09:13] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:09:13] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:09:13] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:09:13] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:09:13] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:09:13] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:09:13] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:09:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:09:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:09:14] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:09:14] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:09:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:09:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:09:15] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:09:15] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:09:15] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:09:16] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:09:16] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:09:16] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:09:17] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:09:17] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:09:17] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:09:18] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:09:18] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:09:18] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:09:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:09:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:09:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:09:20] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:09:20] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:09:20] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:09:21] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:09:21] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:09:21] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:09:21] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:09:22] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:09:22] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:09:22] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:09:22] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:09:22] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:09:22] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:09:22] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:09:22] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:09:22] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:09:22] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:09:22] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:09:22] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:09:22] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:09:22] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:09:22] [INFO] testing 'Oracle error-based - Parameter replace'
[11:09:22] [INFO] testing 'Firebird error-based - Parameter replace'
[11:09:22] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:09:22] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:09:22] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:09:22] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:09:22] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:09:22] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:09:22] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:09:23] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:09:23] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:09:23] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:09:23] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:09:23] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:09:23] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:09:23] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:09:23] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:09:23] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:09:23] [INFO] testing 'Generic inline queries'
[11:09:23] [INFO] testing 'MySQL inline queries'
[11:09:23] [INFO] testing 'PostgreSQL inline queries'
[11:09:23] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:09:23] [INFO] testing 'Oracle inline queries'
[11:09:23] [INFO] testing 'SQLite inline queries'
[11:09:23] [INFO] testing 'Firebird inline queries'
[11:09:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:09:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:09:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:09:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:09:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:09:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:09:24] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:09:24] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:09:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:09:25] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:09:25] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:09:25] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:09:25] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:09:25] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:09:26] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:09:26] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:09:26] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:09:26] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:09:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:09:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:09:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:09:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:09:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:09:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:09:28] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:09:28] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:09:28] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:09:28] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:09:29] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:09:29] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:09:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:09:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:09:30] [INFO] testing 'Oracle AND time-based blind'
[11:09:30] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:09:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:09:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:09:30] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:09:30] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:09:30] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:09:30] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:09:30] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:09:30] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:09:30] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:09:30] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:09:30] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:09:30] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
[11:09:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:09:30] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:09:31] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:09:31] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                                                                           
[11:09:31] [WARNING] Cookie parameter 'PHPSESSID' does not seem to be injectable
[11:09:31] [WARNING] parameter 'User-Agent' does not appear to be dynamic
you provided a HTTP Cookie header value, while target URL provides its own cookies within HTTP Set-Cookie header which intersect with yours. Do you want to merge them in further requests? [Y/n] y
[11:09:36] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[11:09:36] [INFO] testing for SQL injection on parameter 'User-Agent'
[11:09:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:09:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:09:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:09:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:09:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:09:38] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:09:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:09:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:09:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:09:39] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:09:40] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:09:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:09:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:09:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:09:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:09:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:09:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:09:40] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:09:40] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:09:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:09:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:09:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:09:41] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:09:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:09:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:09:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:09:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:09:41] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:09:41] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:09:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:09:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:09:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:09:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:09:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:09:41] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:09:41] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:09:41] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:09:41] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:09:41] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:09:41] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:09:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:09:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:09:41] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:09:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:09:42] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:09:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:09:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:09:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:09:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:09:43] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:09:43] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:09:43] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:09:43] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:09:44] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:09:44] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:09:44] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:09:45] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:09:45] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:09:45] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:09:46] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:09:46] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:09:46] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:09:46] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:09:47] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:09:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:09:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:09:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:09:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:09:48] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:09:48] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:09:49] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:09:49] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:09:49] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:09:49] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:09:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:09:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:09:49] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:09:49] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:09:49] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:09:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:09:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:09:49] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:09:49] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:09:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:09:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:09:49] [INFO] testing 'Oracle error-based - Parameter replace'
[11:09:49] [INFO] testing 'Firebird error-based - Parameter replace'
[11:09:49] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:09:49] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:09:49] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:09:49] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:09:49] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:09:49] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:09:49] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:09:49] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:09:49] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:09:50] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:09:50] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:09:50] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:09:50] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:09:50] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:09:50] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:09:50] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:09:50] [INFO] testing 'Generic inline queries'
[11:09:50] [INFO] testing 'MySQL inline queries'
[11:09:50] [INFO] testing 'PostgreSQL inline queries'
[11:09:50] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:09:50] [INFO] testing 'Oracle inline queries'
[11:09:50] [INFO] testing 'SQLite inline queries'
[11:09:50] [INFO] testing 'Firebird inline queries'
[11:09:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:09:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:09:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:09:50] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:09:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:09:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:09:51] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:09:51] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:09:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:09:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:09:52] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:09:52] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:09:52] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:09:52] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:09:52] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:09:52] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:09:53] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:09:53] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:09:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:09:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:09:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:09:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:09:54] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:09:54] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:09:54] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:09:54] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:09:55] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:09:55] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:09:55] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:09:55] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:09:55] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:09:56] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:09:56] [INFO] testing 'Oracle AND time-based blind'
[11:09:56] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:09:56] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:09:56] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:09:56] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:09:56] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:09:57] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:09:57] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:09:57] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:09:57] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:09:57] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:09:57] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:09:57] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:09:57] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
[11:09:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:09:57] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:09:57] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:09:57] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                                                                           
[11:09:57] [WARNING] parameter 'User-Agent' does not seem to be injectable
[11:09:57] [WARNING] parameter 'Referer' does not appear to be dynamic
[11:09:57] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[11:09:57] [INFO] testing for SQL injection on parameter 'Referer'
[11:09:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:09:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:09:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:09:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:09:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:09:59] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:09:59] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:10:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:10:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:10:01] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:10:01] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:10:01] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:10:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:10:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:10:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:10:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:10:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:10:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:10:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:10:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:10:02] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:10:02] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:10:02] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:10:02] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:10:02] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:10:02] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:10:02] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:10:02] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:10:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:10:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:10:02] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:10:02] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:10:02] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:10:02] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:10:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:10:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:10:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:10:02] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:10:02] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:10:02] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:10:02] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:10:02] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:10:02] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:10:02] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:10:02] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:10:02] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:10:02] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:10:03] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:10:03] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:10:03] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:10:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:10:04] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:10:04] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:10:04] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:10:04] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:10:05] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:10:05] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:10:05] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:10:06] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:10:06] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:10:06] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:10:06] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:10:07] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:10:07] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:10:07] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:10:08] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:10:08] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:10:08] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:10:08] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:10:09] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:10:09] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:10:09] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:10:09] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:10:10] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:10:10] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:10:10] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:10:10] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:10:11] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:10:11] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:10:11] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:10:11] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:10:11] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:10:11] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:10:11] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:10:11] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:10:11] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:10:11] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:10:11] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:10:11] [INFO] testing 'Oracle error-based - Parameter replace'
[11:10:11] [INFO] testing 'Firebird error-based - Parameter replace'
[11:10:11] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:10:11] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:10:11] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:10:11] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:10:11] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:10:11] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:10:11] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:10:11] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:10:11] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:10:11] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:10:11] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:10:11] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:10:11] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:10:11] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:10:11] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:10:11] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:10:11] [INFO] testing 'Generic inline queries'
[11:10:11] [INFO] testing 'MySQL inline queries'
[11:10:11] [INFO] testing 'PostgreSQL inline queries'
[11:10:11] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:10:11] [INFO] testing 'Oracle inline queries'
[11:10:11] [INFO] testing 'SQLite inline queries'
[11:10:11] [INFO] testing 'Firebird inline queries'
[11:10:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:10:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:10:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:10:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:10:12] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:10:12] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:10:12] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:10:12] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:10:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:10:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:10:13] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:10:13] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:10:13] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:10:13] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:10:13] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:10:14] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:10:14] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:10:14] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:10:14] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:10:14] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:10:14] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:10:15] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:10:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:10:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:10:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:10:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:10:16] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:10:16] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:10:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:10:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:10:17] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:10:17] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:10:17] [INFO] testing 'Oracle AND time-based blind'
[11:10:17] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:10:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:10:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:10:18] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:10:18] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:10:18] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:10:18] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:10:18] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:10:18] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:10:18] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:10:18] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:10:18] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:10:18] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
[11:10:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:10:18] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:10:18] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:10:18] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                                                                           
[11:10:18] [WARNING] parameter 'Referer' does not seem to be injectable
[11:10:18] [WARNING] parameter 'Host' does not appear to be dynamic
[11:10:18] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[11:10:18] [INFO] testing for SQL injection on parameter 'Host'
[11:10:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:10:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'                                                         
[11:10:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'                                                                    
[11:10:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'                                                              
[11:10:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'                                                   
[11:10:19] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                  
[11:10:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                         
[11:10:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                              
[11:10:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                         
[11:10:20] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                            
[11:10:20] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                   
[11:10:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                      
[11:10:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'                                                                      
[11:10:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                     
[11:10:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'                                                                           
[11:10:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'                                                          
[11:10:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'                                                                      
[11:10:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                     
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'                                                           
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'                                                          
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                         
[11:10:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'                                                           
[11:10:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'                                          
[11:10:21] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[11:10:21] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'                                                               
[11:10:21] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[11:10:21] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'                                                             
[11:10:21] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'                                                                      
[11:10:21] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'                                                     
[11:10:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:10:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'                                                               
[11:10:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:10:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'                                                               
[11:10:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:10:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                 
[11:10:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'                                                                   
[11:10:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                  
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'                                                                    
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'                                                             
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'                                                            
[11:10:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'                                                             
[11:10:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'                                            
[11:10:21] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'                                                                        
[11:10:21] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                       
[11:10:21] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'                                                              
[11:10:21] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                             
[11:10:21] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'                                                                     
[11:10:21] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                    
[11:10:21] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[11:10:21] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'                                                                
[11:10:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'                                                                           
[11:10:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[11:10:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:10:21] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'                                                            
[11:10:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'                                                        
[11:10:22] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'                                                             
[11:10:22] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[11:10:22] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'                                                                        
[11:10:22] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[11:10:22] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                   
[11:10:22] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                               
[11:10:22] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                       
[11:10:22] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                       
[11:10:23] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:10:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                      
[11:10:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                         
[11:10:23] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                             
[11:10:23] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'                                                                           
[11:10:23] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                     
[11:10:23] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'                                                
[11:10:24] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'                                                 
[11:10:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'                                                                     
[11:10:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'                                                 
[11:10:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'                                                           
[11:10:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'                                               
[11:10:24] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[11:10:24] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[11:10:24] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[11:10:25] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[11:10:25] [INFO] testing 'IBM DB2 OR error-based - WHERE or HAVING clause'
[11:10:25] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                   
[11:10:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'                                                                
[11:10:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[11:10:25] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'                                                                    
[11:10:25] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'                                                                    
[11:10:25] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'                                                                          
[11:10:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'                                                                      
[11:10:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'                                                                   
[11:10:25] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:10:25] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'                                                                  
[11:10:25] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'                                                                   
[11:10:25] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'                                                  
[11:10:25] [INFO] testing 'Oracle error-based - Parameter replace'
[11:10:25] [INFO] testing 'Firebird error-based - Parameter replace'
[11:10:25] [INFO] testing 'IBM DB2 error-based - Parameter replace'
[11:10:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'                                                        
[11:10:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'                                                                    
[11:10:25] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'                                                            
[11:10:25] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'                                                            
[11:10:25] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:10:25] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'                                                           
[11:10:25] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'                                                              
[11:10:25] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'                                                                  
[11:10:25] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:10:25] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'                                                          
[11:10:25] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'                                                                     
[11:10:25] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[11:10:25] [INFO] testing 'Firebird error-based - ORDER BY clause'
[11:10:25] [INFO] testing 'IBM DB2 error-based - ORDER BY clause'
[11:10:25] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'                                                                     
[11:10:25] [INFO] testing 'Generic inline queries'
[11:10:25] [INFO] testing 'MySQL inline queries'
[11:10:25] [INFO] testing 'PostgreSQL inline queries'
[11:10:25] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[11:10:25] [INFO] testing 'Oracle inline queries'
[11:10:25] [INFO] testing 'SQLite inline queries'
[11:10:25] [INFO] testing 'Firebird inline queries'
[11:10:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[11:10:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[11:10:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'                                                                       
[11:10:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[11:10:25] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:10:25] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:10:26] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:10:26] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:10:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'                                                                         
[11:10:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'                                                               
[11:10:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[11:10:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'                                                                         
[11:10:26] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'                                                                  
[11:10:26] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[11:10:26] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[11:10:26] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[11:10:26] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[11:10:26] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[11:10:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'                                                                        
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'                                                                  
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'                                                                          
[11:10:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'                                                                
[11:10:27] [INFO] testing 'MySQL AND time-based blind (ELT)'
[11:10:27] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[11:10:27] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:10:28] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:10:28] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[11:10:28] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'                                                                   
[11:10:28] [INFO] testing 'Oracle AND time-based blind'
[11:10:28] [INFO] testing 'Oracle AND time-based blind (comment)'
[11:10:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'                                                                          
[11:10:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'                                                           
[11:10:28] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[11:10:28] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[11:10:28] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'                                                                         
[11:10:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'                                                                         
[11:10:28] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'                                                                 
[11:10:28] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'                                                       
[11:10:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'                                                                  
[11:10:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'                                                                 
[11:10:28] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'                                                         
[11:10:28] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'                                               
[11:10:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:10:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'                                                                         
[11:10:28] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[11:10:28] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'                  